apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion setup.compileSdk
    defaultConfig {
        applicationId "ru.prodsouz.pda.scanner"
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SCAN_ACTION", "\"scan.rcv.enter\""
        buildConfigField "String", "SCAN_EXTRA_KEY", "\"codestr\""
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
            minifyEnabled true

            resValue "string", "app_name", "Scanner receiver"
        }

        debug {
            resValue "string", "app_name", "Scanner receiver - Beta"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //UI
    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "com.google.code.gson:gson:2.8.5"
}

def appName

if (project.hasProperty("applicationName")) {
    appName = applicationName
} else {
    appName = parent.name
}

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        outputFileName = "${appName}-${appVersionName}-" + variant.name + ".apk"
    }
}
